<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cslg.graduation.dao.ScoreMapper">
    <sql id="insertFields">
        username, time, daily_score, total_score,`rank`
    </sql>

    <sql id="selectFields">
        id, username, time, daily_score, total_score,`rank`
    </sql>

    <select id="findTotalScoreByUsername" resultType="double">
        SELECT IFNULL(max(total_score),0.0) from score,week
        where username = #{username} and score.time = week.time and week.is_show =1
    </select>

    <select id="findDailyScoreByUsername" resultType="double">
        select max( if (
        username = #{username} and time = #{time},
        daily_score,
        0.0
        ))
        from score
    </select>

    <select id="findRankByUsername" resultType="int">
        SELECT IFNULL(max(`rank`),0.0) from score
        where username = #{username} and time = #{time}
    </select>

    <insert id="insertScore" parameterType="Score" keyProperty="id">
        insert into score (<include refid="insertFields"></include>)
        values(#{username}, #{time}, #{dailyScore}, #{totalScore},#{rank})
    </insert>
    
    <update id="updateDailyScore">
        update score set daily_score = #{dailyScore}
        where username = #{username} and time = #{time}
    </update>

    <update id="updateTotalScore">
        update score set total_score =  #{totalScore}
        where username = #{username} and time = #{time}
    </update>

    <select id="selectCountByTime" resultType="int">
        select count(username)
        from score
        where time = #{time} and daily_score > 0
    </select>

    <select id="selectSumByTime" resultType="double">
        SELECT IFNULL(sum(daily_score),0.0)
        from score
        where time = #{time} and daily_score > 0
    </select>

    <select id="selectScoreByUsernameAndTime" resultType="Score">
        select <include refid="selectFields"></include>
        from score
        where username = #{username} and time = #{time}
    </select>

    <update id="updateRank">
        update score set `rank` =  #{rank}
        where username = #{username} and time = #{time}
    </update>

    <select id="selectScoresByTime" resultType="Score">
        select <include refid="selectFields"></include>
        from score
        where time = #{time}
    </select>

    <select id="selectScoresByUsername" resultType="Score">
        select score.time, score.daily_score, score.rank from score,week
        where username = #{username} and score.time = week.time and week.is_show = 1
        ORDER BY time desc
    </select>


</mapper>